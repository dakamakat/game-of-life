name: Merge

on:
  push:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cargo build
      run: cargo build --verbose
      
    - name: Set up wasm pack
      run: cargo install wasm-pack
      
    - name: Wasm-pack build
      run: wasm-pack build --release --target web
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

    - run: wasm-pack test --headless --chrome
    - run: wasm-pack test --headless --firefox
    
  deploy_build:
    needs: [build,test]
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Restore cache
        uses: actions/cache@v3
        
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: |
          cargo install wasm-pack || true \
            && rustup target add wasm32-unknown-unknown

      - name: Build the Rust WASM app and all of its assets
        run: wasm-pack build --release --target web
        
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v2.0.0
        with:
          path: .
          
  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: deploy_build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
